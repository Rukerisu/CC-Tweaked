local monitor, cell

for _, name in ipairs(peripheral.getNames()) do
    local pType = peripheral.getType(name)
    if pType == "monitor" then
        monitor = peripheral.wrap(name)
    elseif pType and pType:lower():find("bigreactors%-energizer") then
        cell = peripheral.wrap(name)
    end
end

if not monitor then error("Monitor not found") end
if not cell then error("BigReactors Energizer not found") end

monitor.setTextScale(2)
local w, h = monitor.getSize()

local active = true  -- predvolený stav

-- Zaokrúhlené formátovanie
local function formatRF(value)
    if value >= 1e15 then
        return string.format("%.2fQ RF", value / 1e15)
    elseif value >= 1e12 then
        return string.format("%.2fT RF", value / 1e12)
    elseif value >= 1e9 then
        return string.format("%.2fB RF", value / 1e9)
    elseif value >= 1e6 then
        return string.format("%.2fM RF", value / 1e6)
    elseif value >= 1e3 then
        return string.format("%.2fk RF", value / 1e3)
    else
        return string.format("%d RF", value)
    end
end

-- Vykreslenie monitora
local function drawScreen()
    monitor.clear()

    local energy = cell.getEnergyStored()
    local maxEnergy = cell.getEnergyCapacity()
    local percent = math.min(energy / maxEnergy, 1)

    -- Výpis energie
    local line = formatRF(energy) .. " / " .. formatRF(maxEnergy)
    local x = math.floor((w - #line) / 2) + 1
    local y = 1
    monitor.setCursorPos(x, y)
    monitor.write(line)

    -- Battery bar (1 riadok)
    local barWidth = w
    local filled = math.floor(barWidth * percent + 0.5)
    monitor.setCursorPos(1, 2)
    monitor.write(string.rep("█", filled) .. string.rep(" ", barWidth - filled))

    -- Tlačidlo ON/OFF
    monitor.setCursorPos(1, 3)
    if active then
        monitor.setBackgroundColor(colors.green)
        monitor.setTextColor(colors.black)
        monitor.write("   ON   ")
    else
        monitor.setBackgroundColor(colors.red)
        monitor.setTextColor(colors.white)
        monitor.write("  OFF   ")
    end

    monitor.setBackgroundColor(colors.black)
    monitor.setTextColor(colors.white)
end

-- Vykresli na začiatku
drawScreen()

-- Paralelný dotykový listener
parallel.waitForAny(
    function() -- aktualizácia stavu
        while true do
            drawScreen()
            sleep(1)
        end
    end,

    function() -- dotykový vstup
        while true do
            local _, side, x, y = os.pullEvent("monitor_touch")
            if y == 3 then  -- kliknutie na spodný riadok
                active = not active
                if cell.setActive then
                    cell.setActive(active)
                end
                drawScreen()
            end
        end
    end
)
